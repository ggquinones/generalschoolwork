import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Random;
import java.util.Scanner;

import javax.swing.JOptionPane;


public class Application {


public static void main(String []args) throws FileNotFoundException
{
	  int minScore = 0;//to store the lowest score 
      int maxScore = 0;//to store the highest score
      int nextScore;//the current reading from the file
      int totalA = 0;//to store the total number of A
      int totalB = 0;//to store the total number of B
      int totalC = 0;//to store the total number of C
      int totalD = 0;//to store the total number of D
      int totalF = 0;//to store the total number of F
      double sum = 0;//to store the total scores
      double average;//to store the average of the scores
      double populationStandardDeviation;//to store the poplulation Standard Deviation of the scores
      String fileName = "exam_scores.txt";//to store the file name
     
      
      Scanner keyboard = new Scanner(System.in);//Declare and instantiate a Scanner object for console reading
      System.out.print("Enter the filename: ");
      fileName = keyboard.nextLine();
      File file = new File(fileName);//Declare and instantiate a File object to the file name solicited and received from the console
      

      
      //Check if the file exists and repeat file name solicitation until the name accepted 
      while (!file.exists()) {
    
          System.out.println("File does not exist, please reenter file name");
          fileName = keyboard.nextLine();
          file = new File(fileName);
          
          
      }
       
       Scanner reader=new Scanner(System.in);//Declare and instantiate another Scanner object reader to read data from the file
       Scanner inputFileName = new Scanner(file);
       //Run a while loop to read, count and sum the scores 
       double count = 0;
       while(inputFileName.hasNext()){
           count++;
          nextScore=inputFileName.nextInt();
         //Apply a nested if else if structure to determine the grade group relevant for nextScore and update the group counter
          if(85<=nextScore)
              totalA = totalA+1;
          else if(75<=nextScore)
              totalB=totalB+1;
          else if(65<=nextScore)
              totalC++;
          else if(55<=nextScore)
              totalD++;
          else if(0<=nextScore)
              totalF++;
          if(nextScore>maxScore) //Check if nextScore is greater than maxScore, if so update maxScore with nextScore
              maxScore=nextScore;
          else if(nextScore<minScore)//Repeat the checking for minScore
              minScore=nextScore;
          sum=sum+nextScore;//Add nextScore to sum
          
       }
       double percentageOfA=totalA/count;//to store the percentage of A
       double percentageOfB=totalB/count;//to store the percentage of B
       double percentageOfC=totalC/count;//to store the percentage of C
       double percentageOfD=totalD/count;//to store the percentage of D
       double percentageOfF=totalF/count;//to store the percentage of F
       inputFileName.close();
       
       reader=new Scanner(System.in);//Re-instantiate the file reader Scanner object
       inputFileName = new Scanner(file);
       average=sum/count;//use formulate to Compute the average
       double psdS;
       double sumPsdS = 0;
       //Run a for loop that makes the summation for psd, see the formula for psd
       while(inputFileName.hasNext()){
           nextScore=inputFileName.nextInt();      
           psdS=average-nextScore;
           psdS=psdS*psdS;
           sumPsdS+=psdS;
           
       }
       inputFileName.close();
      
      double averagePsd;
      averagePsd=Math.sqrt(sumPsdS/count);//Compute psd
      
      
       PrintWriter outputFile=new PrintWriter("ScoreStatistics.txt");//Declare and instantiate a PrintWriter object to write the output to a file named ScoreStatistics.txt
       //write output to file as required
       outputFile.println("Exam Statistics\n");
       outputFile.println("");
       
       outputFile.println("Total:"+sum);
       outputFile.printf("Average Score:%.2f\r\n",average);
       outputFile.printf("Population standard deviation of the scores:%.2f\r\n",averagePsd);
       outputFile.println("");
       outputFile.printf("# of A, 85-100:\t%d\t%.2f%%\r\n",totalA,(percentageOfA*100));
       outputFile.printf("# of B, 75--84:\t%d\t%.2f%%\r\n",totalB,(percentageOfB*100));
       outputFile.printf("# of C, 65--74:\t%d\t%.2f%%\r\n",totalC,(percentageOfC*100));
       outputFile.printf("# of D, 55--64:\t%d\t%.2f%%\r\n",totalD,(percentageOfD*100));
       outputFile.printf("# of F, 00--54:\t%d\t%.2f%%\r\n",totalF,(percentageOfF*100));
       outputFile.println("");
       
       outputFile.println("Minimun Score:"+minScore);
       outputFile.println("Maximun Score:"+maxScore);

       outputFile.close();
       //Display the message on the console 
       System.out.println("Exam Statistics\n");
  
       
       System.out.println("Total:"+sum);
       System.out.printf("Average Score:%.2f\n",average);
       System.out.printf("Population standard deviation of the scores:%.2f\n",averagePsd);
       System.out.println("");
       System.out.printf("# of A, 85-100:\t%d\t%.2f%%\n",totalA,(percentageOfA*100));
       System.out.printf("# of B, 75--84:\t%d\t%.2f%%\n",totalB,(percentageOfB*100));
       System.out.printf("# of C, 65--74:\t%d\t%.2f%%\n",totalC,(percentageOfC*100));
       System.out.printf("# of D, 55--64:\t%d\t%.2f%%\n",totalD,(percentageOfD*100));
       System.out.printf("# of F, 00--54:\t%d\t%.2f%%\n",totalF,(percentageOfF*100));
       System.out.println("");
       
       System.out.println("Minimun Score:"+minScore);
       System.out.println("Maximun Score:"+maxScore);
}

}


	
